/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.cricademy.views;

import com.cricademy.model.AddPlayer;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.LinkedList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author arpannepal
 * LmuId 23048647
 */
public class Admin extends javax.swing.JFrame {

    /**
     * Creates new form Admin
     */
    public Admin() {
        initComponents();
    }
    
    /* 
    linkedlist is created in order to store the players data
    linkedlist accepts the model class a parameter
    */
    LinkedList <AddPlayer> playerList = new LinkedList<>();
    
    //method to get the parameters from the AddPlayer class
    public void addPlayer(AddPlayer player){
       playerList.add(player);
       DefaultTableModel model = (DefaultTableModel)tblPlayerData.getModel();
       Object[] data =new Object[]{
            player.getPlayerId(),player.getPlayerName(),player.getPlayerAddress(), 
            player.getSelectedPlayerType(), player.getPlayerValue(),player.getPlayerAge(),player.getSelectedPlayerStatus(),player.getSelectedGender(),
            player.getRuns(),player.getWickets()
        };  
       model.addRow(data);
   }
    //checking if player with same Id is added more than one time in the system
    private boolean checkRepeatedId(AddPlayer player) {
        for (AddPlayer existingPlayer : playerList) {
            if (existingPlayer.getPlayerId() == player.getPlayerId()) {
                   return true;
            }
        }
        return false;
    }
    
    
    private boolean removePlayer(int id, int selectedRow) {
        Iterator<AddPlayer> iterator = playerList.iterator();
        while (iterator.hasNext()) {
            AddPlayer player = iterator.next();
            if (player.getPlayerId() == id) {
                // Remove the player from the list
                iterator.remove();

                //using removeRow function from default table model to remove selected row
                DefaultTableModel model = (DefaultTableModel) tblPlayerData.getModel();
                model.removeRow(selectedRow);
                return true; // player deleted successfully
            }
        }
    return false; //player id didnot match
    }
    
    private void updatePlayer() {
    DefaultTableModel model = (DefaultTableModel) tblPlayerData.getModel();
    
    // Clear the table before loading new data
    model.setRowCount(0);

    // Iterate through the LinkedList and add each player to the table
    for (AddPlayer player : playerList) {
        model.addRow(new Object[]{
            player.getPlayerId(),
            player.getPlayerName(),
            player.getPlayerAddress(),
            player.getPlayerValue(),
            player.getSelectedGender(),
            player.getSelectedPlayerType(),
            player.getPlayerAge(),
            player.getRuns(),
            player.getWickets(),
            player.getSelectedPlayerStatus()      
        });
    }
}
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupPlayerStatus = new javax.swing.ButtonGroup();
        buttonGroupGender = new javax.swing.ButtonGroup();
        pnlAdminBackground = new javax.swing.JPanel();
        lblPlayerName = new javax.swing.JLabel();
        pnlAdminTitleBackground = new javax.swing.JPanel();
        lblAdminTitle = new javax.swing.JLabel();
        txtFldPlayerName = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPlayerData = new javax.swing.JTable();
        pnlAddPlayerBackground = new javax.swing.JPanel();
        txtFldAddress = new javax.swing.JTextField();
        lblAddress = new javax.swing.JLabel();
        txtFldAge = new javax.swing.JTextField();
        lblAge = new javax.swing.JLabel();
        txtFldPlayerValue = new javax.swing.JTextField();
        lblPlayerValue = new javax.swing.JLabel();
        lblGender = new javax.swing.JLabel();
        radioBtnMale = new javax.swing.JRadioButton();
        radioBtnFemale = new javax.swing.JRadioButton();
        txtFldRuns = new javax.swing.JTextField();
        lblRuns = new javax.swing.JLabel();
        lblWickets = new javax.swing.JLabel();
        txtFldWickets = new javax.swing.JTextField();
        lblPlayerType = new javax.swing.JLabel();
        comBoxPlayerType = new javax.swing.JComboBox<>();
        txtFldPlayerId = new javax.swing.JTextField();
        lblPlayerId = new javax.swing.JLabel();
        lblStatus = new javax.swing.JLabel();
        radioBtnCapped = new javax.swing.JRadioButton();
        radioBtnUncapped = new javax.swing.JRadioButton();
        pnlPlayerDataBackground = new javax.swing.JPanel();
        pnlLine = new javax.swing.JPanel();
        btnRemovePlayer = new javax.swing.JButton();
        btnAddPlayer1 = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        pnlLeftBackground = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        btnExit = new javax.swing.JButton();
        pnlTableBackground = new javax.swing.JPanel();
        lblLogo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1000, 1000));
        setResizable(false);

        pnlAdminBackground.setBackground(new java.awt.Color(254, 236, 195));
        pnlAdminBackground.setForeground(new java.awt.Color(255, 255, 255));
        pnlAdminBackground.setPreferredSize(new java.awt.Dimension(1000, 1000));
        pnlAdminBackground.setLayout(null);

        lblPlayerName.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblPlayerName.setText("Players Name:");
        pnlAdminBackground.add(lblPlayerName);
        lblPlayerName.setBounds(60, 240, 130, 20);

        pnlAdminTitleBackground.setBackground(new java.awt.Color(124, 156, 171));

        lblAdminTitle.setBackground(new java.awt.Color(124, 156, 171));
        lblAdminTitle.setFont(new java.awt.Font("Helvetica Neue", 1, 36)); // NOI18N
        lblAdminTitle.setText("ADMIN DASHBOARD");

        javax.swing.GroupLayout pnlAdminTitleBackgroundLayout = new javax.swing.GroupLayout(pnlAdminTitleBackground);
        pnlAdminTitleBackground.setLayout(pnlAdminTitleBackgroundLayout);
        pnlAdminTitleBackgroundLayout.setHorizontalGroup(
            pnlAdminTitleBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAdminTitleBackgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblAdminTitle)
                .addContainerGap(8, Short.MAX_VALUE))
        );
        pnlAdminTitleBackgroundLayout.setVerticalGroup(
            pnlAdminTitleBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAdminTitleBackgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblAdminTitle)
                .addContainerGap(9, Short.MAX_VALUE))
        );

        pnlAdminBackground.add(pnlAdminTitleBackground);
        pnlAdminTitleBackground.setBounds(340, 40, 380, 60);

        txtFldPlayerName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFldPlayerNameActionPerformed(evt);
            }
        });
        pnlAdminBackground.add(txtFldPlayerName);
        txtFldPlayerName.setBounds(190, 230, 210, 40);

        tblPlayerData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Player Name", "Address", "Player Type", "Player Value", "Age", "Status", "Gender", "Runs", "Wickets"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblPlayerData);
        if (tblPlayerData.getColumnModel().getColumnCount() > 0) {
            tblPlayerData.getColumnModel().getColumn(0).setResizable(false);
            tblPlayerData.getColumnModel().getColumn(0).setPreferredWidth(50);
        }

        pnlAdminBackground.add(jScrollPane1);
        jScrollPane1.setBounds(30, 600, 930, 200);

        pnlAddPlayerBackground.setBackground(new java.awt.Color(232, 203, 177));

        txtFldAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFldAddressActionPerformed(evt);
            }
        });

        lblAddress.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblAddress.setText("Address:");

        lblAge.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblAge.setText("Age:");

        lblPlayerValue.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblPlayerValue.setText("Player Value:");

        lblGender.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblGender.setText("Gender:");

        buttonGroupGender.add(radioBtnMale);
        radioBtnMale.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        radioBtnMale.setText("Male");
        radioBtnMale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBtnMaleActionPerformed(evt);
            }
        });

        buttonGroupGender.add(radioBtnFemale);
        radioBtnFemale.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        radioBtnFemale.setText("Female");
        radioBtnFemale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBtnFemaleActionPerformed(evt);
            }
        });

        lblRuns.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblRuns.setText("Runs:");

        lblWickets.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblWickets.setText("Wickets:");

        lblPlayerType.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblPlayerType.setText("Player Type:");

        comBoxPlayerType.setBackground(new java.awt.Color(254, 236, 195));
        comBoxPlayerType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Batsman", "Bowler", "All Rounder" }));
        comBoxPlayerType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comBoxPlayerTypeActionPerformed(evt);
            }
        });

        txtFldPlayerId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFldPlayerIdActionPerformed(evt);
            }
        });

        lblPlayerId.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblPlayerId.setText("Player ID:");

        lblStatus.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblStatus.setText("Status:");

        buttonGroupPlayerStatus.add(radioBtnCapped);
        radioBtnCapped.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        radioBtnCapped.setText("Capped");

        buttonGroupPlayerStatus.add(radioBtnUncapped);
        radioBtnUncapped.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        radioBtnUncapped.setText("Uncapped");

        javax.swing.GroupLayout pnlAddPlayerBackgroundLayout = new javax.swing.GroupLayout(pnlAddPlayerBackground);
        pnlAddPlayerBackground.setLayout(pnlAddPlayerBackgroundLayout);
        pnlAddPlayerBackgroundLayout.setHorizontalGroup(
            pnlAddPlayerBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAddPlayerBackgroundLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(pnlAddPlayerBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblPlayerValue)
                    .addComponent(lblAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(pnlAddPlayerBackgroundLayout.createSequentialGroup()
                .addGroup(pnlAddPlayerBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlAddPlayerBackgroundLayout.createSequentialGroup()
                        .addGap(160, 160, 160)
                        .addGroup(pnlAddPlayerBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtFldAddress, javax.swing.GroupLayout.DEFAULT_SIZE, 209, Short.MAX_VALUE)
                            .addComponent(txtFldPlayerValue)))
                    .addGroup(pnlAddPlayerBackgroundLayout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(lblGender, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(radioBtnMale, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radioBtnFemale, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAddPlayerBackgroundLayout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(pnlAddPlayerBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblPlayerType, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPlayerId))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlAddPlayerBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comBoxPlayerType, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFldPlayerId, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3)))
                .addGroup(pnlAddPlayerBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlAddPlayerBackgroundLayout.createSequentialGroup()
                        .addGap(116, 116, 116)
                        .addGroup(pnlAddPlayerBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblRuns)
                            .addComponent(lblAge, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlAddPlayerBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFldAge, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFldRuns, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlAddPlayerBackgroundLayout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addGroup(pnlAddPlayerBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblWickets)
                            .addComponent(lblStatus))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlAddPlayerBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFldWickets)
                            .addGroup(pnlAddPlayerBackgroundLayout.createSequentialGroup()
                                .addGroup(pnlAddPlayerBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(radioBtnUncapped, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(radioBtnCapped, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(307, 307, 307))
        );
        pnlAddPlayerBackgroundLayout.setVerticalGroup(
            pnlAddPlayerBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAddPlayerBackgroundLayout.createSequentialGroup()
                .addGroup(pnlAddPlayerBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlAddPlayerBackgroundLayout.createSequentialGroup()
                        .addGroup(pnlAddPlayerBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlAddPlayerBackgroundLayout.createSequentialGroup()
                                .addGap(92, 92, 92)
                                .addGroup(pnlAddPlayerBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtFldAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblAddress)))
                            .addGroup(pnlAddPlayerBackgroundLayout.createSequentialGroup()
                                .addGap(142, 142, 142)
                                .addGroup(pnlAddPlayerBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblPlayerValue)
                                    .addComponent(txtFldPlayerValue, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlAddPlayerBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(radioBtnMale, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(radioBtnFemale, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblGender, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlAddPlayerBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPlayerType)
                            .addComponent(comBoxPlayerType, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlAddPlayerBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtFldPlayerId, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPlayerId, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlAddPlayerBackgroundLayout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(pnlAddPlayerBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAge)
                            .addComponent(txtFldAge, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(pnlAddPlayerBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtFldRuns, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblRuns))
                        .addGap(26, 26, 26)
                        .addGroup(pnlAddPlayerBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtFldWickets, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblWickets))
                        .addGap(18, 18, 18)
                        .addGroup(pnlAddPlayerBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblStatus)
                            .addComponent(radioBtnCapped))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radioBtnUncapped)))
                .addContainerGap(7, Short.MAX_VALUE))
        );

        pnlAdminBackground.add(pnlAddPlayerBackground);
        pnlAddPlayerBackground.setBounds(30, 190, 710, 310);

        pnlPlayerDataBackground.setBackground(new java.awt.Color(51, 58, 68));

        pnlLine.setBackground(new java.awt.Color(124, 156, 171));
        pnlLine.setForeground(new java.awt.Color(102, 102, 102));

        javax.swing.GroupLayout pnlLineLayout = new javax.swing.GroupLayout(pnlLine);
        pnlLine.setLayout(pnlLineLayout);
        pnlLineLayout.setHorizontalGroup(
            pnlLineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 11, Short.MAX_VALUE)
        );
        pnlLineLayout.setVerticalGroup(
            pnlLineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 310, Short.MAX_VALUE)
        );

        btnRemovePlayer.setBackground(new java.awt.Color(232, 95, 92));
        btnRemovePlayer.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        btnRemovePlayer.setForeground(new java.awt.Color(255, 255, 255));
        btnRemovePlayer.setText("Remove Player");
        btnRemovePlayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemovePlayerActionPerformed(evt);
            }
        });

        btnAddPlayer1.setBackground(new java.awt.Color(124, 156, 171));
        btnAddPlayer1.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        btnAddPlayer1.setForeground(new java.awt.Color(255, 255, 255));
        btnAddPlayer1.setText("Add Player");
        btnAddPlayer1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddPlayer1ActionPerformed(evt);
            }
        });

        btnClear.setBackground(new java.awt.Color(232, 203, 177));
        btnClear.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(254, 236, 195));
        btnUpdate.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlPlayerDataBackgroundLayout = new javax.swing.GroupLayout(pnlPlayerDataBackground);
        pnlPlayerDataBackground.setLayout(pnlPlayerDataBackgroundLayout);
        pnlPlayerDataBackgroundLayout.setHorizontalGroup(
            pnlPlayerDataBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPlayerDataBackgroundLayout.createSequentialGroup()
                .addContainerGap(755, Short.MAX_VALUE)
                .addComponent(pnlLine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlPlayerDataBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAddPlayer1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRemovePlayer, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32))
        );
        pnlPlayerDataBackgroundLayout.setVerticalGroup(
            pnlPlayerDataBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPlayerDataBackgroundLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(pnlPlayerDataBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(pnlPlayerDataBackgroundLayout.createSequentialGroup()
                        .addComponent(btnRemovePlayer, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAddPlayer1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(pnlLine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pnlAdminBackground.add(pnlPlayerDataBackground);
        pnlPlayerDataBackground.setBounds(10, 170, 970, 350);

        pnlLeftBackground.setBackground(new java.awt.Color(51, 58, 68));

        jPanel3.setBackground(new java.awt.Color(246, 246, 163));

        btnExit.setBackground(new java.awt.Color(102, 89, 23));
        btnExit.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        btnExit.setForeground(new java.awt.Color(255, 255, 255));
        btnExit.setText("EXIT");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlLeftBackgroundLayout = new javax.swing.GroupLayout(pnlLeftBackground);
        pnlLeftBackground.setLayout(pnlLeftBackgroundLayout);
        pnlLeftBackgroundLayout.setHorizontalGroup(
            pnlLeftBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLeftBackgroundLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );
        pnlLeftBackgroundLayout.setVerticalGroup(
            pnlLeftBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLeftBackgroundLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(902, Short.MAX_VALUE))
        );

        pnlAdminBackground.add(pnlLeftBackground);
        pnlLeftBackground.setBounds(0, 0, 200, 1000);

        pnlTableBackground.setBackground(new java.awt.Color(51, 58, 68));

        javax.swing.GroupLayout pnlTableBackgroundLayout = new javax.swing.GroupLayout(pnlTableBackground);
        pnlTableBackground.setLayout(pnlTableBackgroundLayout);
        pnlTableBackgroundLayout.setHorizontalGroup(
            pnlTableBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 960, Short.MAX_VALUE)
        );
        pnlTableBackgroundLayout.setVerticalGroup(
            pnlTableBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 260, Short.MAX_VALUE)
        );

        pnlAdminBackground.add(pnlTableBackground);
        pnlTableBackground.setBounds(20, 570, 960, 260);

        lblLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/cricademy/resource/smalllogo.png"))); // NOI18N
        pnlAdminBackground.add(lblLogo);
        lblLogo.setBounds(810, 10, 170, 160);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlAdminBackground, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlAdminBackground, javax.swing.GroupLayout.PREFERRED_SIZE, 889, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void radioBtnMaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBtnMaleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioBtnMaleActionPerformed

    private void radioBtnFemaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBtnFemaleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioBtnFemaleActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // TODO add your handling code here:
        Home home = new Home();
        home.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnAddPlayer1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddPlayer1ActionPerformed
        // TODO add your handling code here:
        
        
        //check if the input field are empty
        if(txtFldPlayerName.getText().equals("") || txtFldAddress.getText().equals("")  || txtFldPlayerValue.getText().equals("") || txtFldAge.getText().equals("") ||txtFldRuns.getText().equals("") ||txtFldWickets.getText().equals("") || txtFldPlayerId.getText().equals("") ){
            JOptionPane.showMessageDialog(null,"Empty field detected!");
        }
        //check if the gender is not selected
        else if(!radioBtnMale.isSelected() && !radioBtnFemale.isSelected()){
            JOptionPane.showMessageDialog(null, "Gender is not selected. Please select a gender!","Error",JOptionPane.WARNING_MESSAGE);
        }
            
        //check if the player status is not selected
        else if(!radioBtnCapped.isSelected() && !radioBtnUncapped.isSelected()){
                JOptionPane.showMessageDialog(null, "Player status is not selected. Please select player status!","Error",JOptionPane.WARNING_MESSAGE);
        }
           
        else{
            try{
                //validate if the age is in integer
                int playerAgeInt = Integer.parseInt(txtFldAge.getText());
                try{
                    //validate if the value is in integer
                    int playerValueInt = Integer.parseInt(txtFldPlayerValue.getText());
                    
                    try{
                        //validate if the runs is in integer
                        int runsInt = Integer.parseInt(txtFldRuns.getText());
                        
                        try{
                            //validate if the wickets is in integer
                            int wicketsInt = Integer.parseInt(txtFldWickets.getText());
                            
                            try{
                                //validate if the player id is in integer
                                int idInt = Integer.parseInt(txtFldPlayerId.getText());
                                
                             
                                String playerName = txtFldPlayerName.getText();
                                String playerAddress = txtFldAddress.getText();
                                int playerValue = Integer.parseInt(txtFldPlayerValue.getText());
                                String selectedGender = radioBtnMale.isSelected() ? "Male" : "Female";
                                String selectedPlayerType = (String) comBoxPlayerType.getSelectedItem();
                                int playerAge = Integer.parseInt(txtFldAge.getText());
                                int runs = Integer.parseInt(txtFldRuns.getText());
                                int wickets = Integer.parseInt(txtFldWickets.getText());
                                int playerId = Integer.parseInt(txtFldPlayerId.getText());
                                String selectedPlayerStatus = radioBtnCapped.isSelected() ? "Capped" : "Uncapped";


                                boolean isValid=true;

                                if (isValid) {
                                    AddPlayer newPlayer = new AddPlayer(playerName,playerAddress,playerValue,selectedGender,selectedPlayerType,playerAge,runs,wickets,selectedPlayerStatus,playerId);
                                    if (checkRepeatedId(newPlayer)) {
                                    JOptionPane.showMessageDialog(null,"Duplicate player ID. Please insert a valid ID", "Error", JOptionPane.INFORMATION_MESSAGE);

                                    } 
                                    else {    
                                    addPlayer(newPlayer);               
                                        JOptionPane.showMessageDialog(null,"Added successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
                                    }

                                }
                                
                                
                                
                            }
                            catch(NumberFormatException e){
                                JOptionPane.showMessageDialog(null, "Please enter ID in numeric form.","Error",JOptionPane.ERROR_MESSAGE);
                            }
                            
                        }
                        catch(NumberFormatException e){
                            JOptionPane.showMessageDialog(null, "Please enter wickets in numeric form.","Error",JOptionPane.ERROR_MESSAGE);
                        }
                        
                    }
                    catch(NumberFormatException e){
                        JOptionPane.showMessageDialog(null, "Please enter runs in numeric form.","Error",JOptionPane.ERROR_MESSAGE);
                    }
                    
                }
                catch(NumberFormatException e){
                    JOptionPane.showMessageDialog(null, "Please enter player value in numeric form.","Error",JOptionPane.ERROR_MESSAGE);
                }
                
            }
            
            catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null, "Please enter player age in numeric value.","Error",JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnAddPlayer1ActionPerformed

    private void btnRemovePlayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemovePlayerActionPerformed
        // TODO add your handling code here:
        
            
        DefaultTableModel model = (DefaultTableModel) tblPlayerData.getModel();
        int selectedRow = tblPlayerData.getSelectedRow();

        if (selectedRow != -1) { 
            int playerId = (Integer) tblPlayerData.getValueAt(selectedRow, 0);
            int confirm = JOptionPane.showConfirmDialog(
            null,"Are you sure you want to remove this player?","Confirm Deletion",JOptionPane.YES_NO_OPTION,JOptionPane.WARNING_MESSAGE );
            
            if (confirm == JOptionPane.YES_OPTION) {
                boolean remove = removePlayer(playerId, selectedRow);
                if (remove) {
                JOptionPane.showMessageDialog(null, "Player deleted successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
                }
            } 
        }
        else {
            JOptionPane.showMessageDialog(null, "Please select a player from the below table.", "Error", JOptionPane.ERROR_MESSAGE);
        }
     
    }//GEN-LAST:event_btnRemovePlayerActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        txtFldPlayerName.setText("");
        txtFldAddress.setText("");
        txtFldPlayerValue.setText("");
        buttonGroupGender.clearSelection();
        txtFldAge.setText("");
        txtFldRuns.setText("");
        txtFldWickets.setText("");
        buttonGroupPlayerStatus.clearSelection();
        txtFldPlayerId.setText("");
        
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        String playerName = txtFldPlayerName.getText();
        String playerAddress = txtFldAddress.getText();
        int playerValue = Integer.parseInt(txtFldPlayerValue.getText());
        String selectedGender = radioBtnMale.isSelected() ? "Male" : "Female";
        String selectedPlayerType = (String) comBoxPlayerType.getSelectedItem();
        int playerAge = Integer.parseInt(txtFldAge.getText());
        int runs = Integer.parseInt(txtFldRuns.getText());
        int wickets = Integer.parseInt(txtFldWickets.getText());
        int playerId = Integer.parseInt(txtFldPlayerId.getText());
        String selectedPlayerStatus = radioBtnCapped.isSelected() ? "Capped" : "Uncapped";

        boolean isValid=true;

        if (isValid) {
        // Locate the member in the LinkedList and update it
            for (AddPlayer player : playerList) {
                if (player.getPlayerId() == playerId) { // Matching memberId
                // Update member details
                    player.setPlayerName(playerName);
                    player.setPlayerAddress(playerAddress);
                    player.setPlayerValue(playerValue);
                    player.setSelectedGender(selectedGender);
                    player.setSelectedPlayerType(selectedPlayerType);
                    player.setPlayerAge(playerAge);
                    player.setRuns(runs);
                    player.setWickets(wickets);
                    player.setSelectedPlayerStatus(selectedPlayerStatus);
                           

                    updatePlayer();
                    JOptionPane.showMessageDialog(null, "Players data updated successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
                    return; // Exit after updating
                }
            }
        }  
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void comBoxPlayerTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comBoxPlayerTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comBoxPlayerTypeActionPerformed

    private void txtFldPlayerNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFldPlayerNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFldPlayerNameActionPerformed

    private void txtFldAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFldAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFldAddressActionPerformed

    private void txtFldPlayerIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFldPlayerIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFldPlayerIdActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Admin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddPlayer1;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnRemovePlayer;
    private javax.swing.JButton btnUpdate;
    private javax.swing.ButtonGroup buttonGroupGender;
    private javax.swing.ButtonGroup buttonGroupPlayerStatus;
    private javax.swing.JComboBox<String> comBoxPlayerType;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblAdminTitle;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblLogo;
    private javax.swing.JLabel lblPlayerId;
    private javax.swing.JLabel lblPlayerName;
    private javax.swing.JLabel lblPlayerType;
    private javax.swing.JLabel lblPlayerValue;
    private javax.swing.JLabel lblRuns;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblWickets;
    private javax.swing.JPanel pnlAddPlayerBackground;
    private javax.swing.JPanel pnlAdminBackground;
    private javax.swing.JPanel pnlAdminTitleBackground;
    private javax.swing.JPanel pnlLeftBackground;
    private javax.swing.JPanel pnlLine;
    private javax.swing.JPanel pnlPlayerDataBackground;
    private javax.swing.JPanel pnlTableBackground;
    private javax.swing.JRadioButton radioBtnCapped;
    private javax.swing.JRadioButton radioBtnFemale;
    private javax.swing.JRadioButton radioBtnMale;
    private javax.swing.JRadioButton radioBtnUncapped;
    private javax.swing.JTable tblPlayerData;
    private javax.swing.JTextField txtFldAddress;
    private javax.swing.JTextField txtFldAge;
    private javax.swing.JTextField txtFldPlayerId;
    private javax.swing.JTextField txtFldPlayerName;
    private javax.swing.JTextField txtFldPlayerValue;
    private javax.swing.JTextField txtFldRuns;
    private javax.swing.JTextField txtFldWickets;
    // End of variables declaration//GEN-END:variables
}
